' === Declarations ===
Public V_Pressure As Float     ' pressure sensor reading
Public Pressure_psi As Float   ' Converted pressure
Public T1 As Long                 ' Scan counter inside states
Public State As String * 10    ' State machine
Public ScanCounter As Long        ' Scan counter
Dim StopNow As Boolean         ' Set when C8 trips
Dim PortInput As Long          ' Destination for PortGet (digital read on C8)

' === Constants ===
Const PRESSURE_THRESHOLD = 41.0   ' pump maxes out around here
Const TIMEOUT_SCANS = 360            ' e.g. 6 min at 10s scans = 36
Const STARTUP_DELAY_SCANS = 10     ' 10s at 1s scan rate
Const SCAN_INTERVAL_SECS = 1

' === Data Table ===
DataTable(SampleLog, True, -1)
  DataInterval(0, SCAN_INTERVAL_SECS, Sec, 1)
  Sample(1, V_Pressure, FP2)     ' logged in mV
  Sample(1, Pressure_psi, FP2)
  Sample(1, State, String)
  Sample(1, StopNow, Boolean)    ' log the stop event (will show with timestamp)
EndTable

' === Pressure Conversion Function ===
Function VoltageToPSI(V As Float) As Float
  If V <= 1.0 Then
    VoltageToPSI = 0
  ElseIf V >= 5.0 Then
    VoltageToPSI = 145.0
  Else
    VoltageToPSI = (V - 1.0) * (145.0 / 4.0)
  EndIf
EndFunction

' === Main Program ===
BeginProg
  State = "WAIT"
  ScanCounter = 0
  T1 = 0
  StopNow = False
  PortInput = 0

  ' Main scan loop: runs every SCAN_INTERVAL_SECS
  Scan(SCAN_INTERVAL_SECS, Sec, 0, 0)

    ' === Read sensor (single-ended) ===
    ' VoltSE reads mV into V_Pressure, so divide by 1000 to get V
    VoltSe (V_Pressure, 1, mV5000, 1, 0, 0, 0, 1/1000, 0)
    Pressure_psi = VoltageToPSI(V_Pressure)

    ' === State machine ===
    If State = "WAIT" Then
      ScanCounter = ScanCounter + 1
      If ScanCounter >= STARTUP_DELAY_SCANS Then
        State = "SAMPLE"
        T1 = 0
        StopNow = False
      EndIf

    ElseIf State = "SAMPLE" Then
      ' checks if hardware interrupt is true
      PortGet(PortInput, 8)   
      If PortInput = 1 Then
        StopNow = True
      EndIf

      ' Start pump and then valve (pump first; valve after 1 scan)
      PortSet(2, 0)   ' Pump ON (C2)
      If T1 >= 1 Then
        PortSet(1, 0)   ' Valve OPEN (C1)
      EndIf

      T1 = T1 + 1
      If (Pressure_psi >= PRESSURE_THRESHOLD) OR (T1 >= TIMEOUT_SCANS) OR StopNow Then
        State = "SHUTDOWN"
        T1 = 0
      EndIf

    ElseIf State = "SHUTDOWN" Then
      ' Close valve first, then turn off pump after a delay
      PortSet(1, 0)   ' Close valve immediately
      If T1 >= 1 Then
        PortSet(2, 0)   ' Turn off pump after 1 scan
        State = "DONE"
      EndIf
      T1 = T1 + 1

    ElseIf State = "DONE" Then
      PortSet(1, 1)
      PortSet(2, 1)
      ' System idle - add code to reset later... building manifold takes precedence
    EndIf

    ' === Logging ===
    CallTable SampleLog

  NextScan

EndProg
